require 'encrypted_id_finder'
class Message < ActiveRecord::Base
  # extends ...................................................................
  encrypted_id key: '9dQQjevhdWx4BwxV'
  # includes ..................................................................
  include EncryptedIdFinder
  # security (i.e. attr_accessible) ...........................................
  # relationships .............................................................
  # validations ...............................................................
  # callbacks .................................................................
  # scopes ....................................................................
  scope :question, -> { where(:category => "question") }
  scope :by_device, ->(device_id) {
    where("q_messages.from = ? OR q_messages.to = ?", device_id, device_id)
  }
  scope :since, ->(id) {
    where("q_messages.id > ?", EncryptedId.decrypt(Message.encrypted_id_key, id)) if id
  }
  # additional config .........................................................
  self.table_name = "q_messages"
  # class methods .............................................................
  # public instance methods ...................................................
  def question_id
    EncryptedId.encrypt(Message.encrypted_id_key, parent_id)
  end

  def product_id
    EncryptedId.encrypt(Product.encrypted_id_key, object_id)
  end
  # protected instance methods ................................................
  # private instance methods ..................................................
end
