class Node < ActiveRecord::Base
  # extends ...................................................................
  encrypted_id key: 'bb2CJaHsHjEZhd2T'
  # includes ..................................................................
  # security (i.e. attr_accessible) ...........................................
  # relationships .............................................................
  has_many :topics
  # validations ...............................................................
  # callbacks .................................................................
  # scopes ....................................................................
  scope :public, -> { where(:privated => false) }
  # additional config .........................................................
  # class methods .............................................................
  # public instance methods ...................................................
  def manager_list
    node_managers = Setting.find_by_name("node_managers").value + " "
    all_managers = node_managers + managers
    all_managers.split(" ") rescue []
  end

  def block_user(manager, user)
    blacklist = Blacklist.new({ device_id: user, node_id: self.id })
    manager_list.include?(manager) && blacklist.save
  end
  # protected instance methods ................................................
  # private instance methods ..................................................
end
